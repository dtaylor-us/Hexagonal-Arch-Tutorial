version: '3.8'
services:
  todo-service:
    build:
      context: ./todo-service/todo-service
      dockerfile: docker/Dockerfile
    ports:
      - "8080:8080"
    environment:
      SPRING_PROFILES_ACTIVE: db-seed
      SPRING_DATA_MONGODB_URI: mongodb://admin:dasspassword@mongodb:27017
      USER_SERVICE_URL: http://user-service:8085
    depends_on:
      - mongodb
      - user-service
    networks:
      - app-network
#      - kafka

  user-service:
    build:
      context: ./user-management/user-service
      dockerfile: docker/Dockerfile
    ports:
      - "8085:8085"
    environment:
      SPRING_PROFILES_ACTIVE: db-seed
      SPRING_DATA_MONGODB_URI: mongodb://admin:dasspassword@mongodb:27017
    depends_on:
      - mongodb
    networks:
      - app-network
#      - kafka

  mongodb:
    image: mongo
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: dasspassword
    networks:
      - app-network
#  zookeeper:
#    image: wurstmeister/zookeeper
#    ports:
#      - "2181:2181"
#
#  kafka:
#    image: wurstmeister/kafka
#    ports:
#      - "9092:9092"
#    environment:
#      KAFKA_ADVERTISED_HOST_NAME: kafka
#      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
#    depends_on:
#      - zookeeper
#
#  angular-frontend:
#    build: ./path/to/angular/frontend
#    ports:
#      - "80:80"
#    depends_on:
#      - todo-service
#      - user-service

networks:
  app-network:
    driver: bridge
